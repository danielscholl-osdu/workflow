<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright Â© Microsoft Corporation

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <groupId>org.opengroup.osdu</groupId>
    <artifactId>os-workflow</artifactId>
    <version>0.23.0-SNAPSHOT</version>
    <relativePath>../../pom.xml</relativePath>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <artifactId>workflow-azure</artifactId>
  <description>Workflow service on Azure</description>
  <packaging>jar</packaging>

  <properties>
    <azure.version>3.4.0</azure.version>
    <osdu.corelibazure.version>0.22.0-rc2</osdu.corelibazure.version>
    <azure.appservice.resourcegroup />
    <azure.appservice.plan />
    <azure.appservice.appname />
    <azure.appservice.subscription />
    <spring-webmvc.version>5.3.22</spring-webmvc.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Inherit managed dependencies from core-lib-azure -->
      <dependency>
        <groupId>org.opengroup.osdu</groupId>
        <artifactId>core-lib-azure</artifactId>
        <version>${osdu.corelibazure.version}</version>
        <type>pom</type>
        <scope>import</scope>
        <exclusions>
          <exclusion>
            <artifactId>azure-core</artifactId>
            <groupId>com.azure</groupId>
          </exclusion>
        </exclusions>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <!--Azure core has xml deserialization issue after 1.34 due to headers not fetched from
          NettyToAzureCoreHttpHeadersWrapper class and fails for decoding the xml responses used in
          workflow sharing via sas token
          If we use azure-core-http-netty there is no such issue and we get azure-core 1.35 which
          is the current version in core-lib-azure          -->
      <artifactId>azure-core-http-netty</artifactId>
      <groupId>com.azure</groupId>
      <version>1.12.8</version>
    </dependency>
    <dependency>
      <!-- https://mvnrepository.com/artifact/com.azure.spring/spring-cloud-azure-starter-active-directory -->
        <groupId>com.azure.spring</groupId>
        <artifactId>azure-spring-boot-starter-active-directory</artifactId>
        <version>${azure.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>log4j-to-slf4j</artifactId>
            <groupId>org.apache.logging.log4j</groupId>
          </exclusion>
          <exclusion>
            <artifactId>logback-classic</artifactId>
            <groupId>ch.qos.logback</groupId>
          </exclusion>
        </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
      <exclusions>
        <exclusion>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-classic</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-to-slf4j</artifactId>
        </exclusion>
      </exclusions>

    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring-webmvc.version}</version>
    </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>Hoxton.SR3</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-oauth2-client</artifactId>
      <version>5.6.9</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-oauth2-jose</artifactId>
    </dependency>
    <dependency>
      <groupId>org.opengroup.osdu</groupId>
      <artifactId>core-lib-azure</artifactId>
      <version>${osdu.corelibazure.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.simpleframework</groupId>
          <artifactId>simple-xml</artifactId>
        </exclusion>
        <exclusion>
          <!-- Removing azure core as we'll include the netty version-->
          <artifactId>azure-core</artifactId>
          <groupId>com.azure</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.opengroup.osdu</groupId>
      <artifactId>workflow-core</artifactId>
      <version>0.23.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-tcnative-boringssl-static</artifactId>
      <version>2.0.46.Final</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <version>2.2.11.RELEASE</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>com.vaadin.external.google</groupId>
          <artifactId>android-json</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.azure</groupId>
      <artifactId>azure-storage-file-share</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>azure-storage-common</artifactId>
          <groupId>com.azure</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- WhiteSource updates -->
    <dependency>
      <groupId>org.apache.tomcat</groupId>
      <artifactId>tomcat-catalina</artifactId>
      <version>9.0.76</version>
    </dependency>

    <dependency>
        <groupId>io.micrometer</groupId>
        <artifactId>micrometer-core</artifactId>
        <version>1.8.1</version>
    </dependency>

    <dependency>
      <groupId>net.minidev</groupId>
      <artifactId>accessors-smart</artifactId>
      <version>2.4.7</version>
    </dependency>

    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>42.4.1</version>
      <scope>runtime</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
            <configuration>
              <classifier>spring-boot</classifier>
              <mainClass>org.opengroup.osdu.workflow.provider.azure.WorkflowApplication</mainClass>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.microsoft.azure</groupId>
        <artifactId>azure-webapp-maven-plugin</artifactId>
        <version>1.7.0</version>
        <configuration>
          <schemaVersion>V2</schemaVersion>
          <authentication>
            <serverId>azure-auth</serverId>
          </authentication>
          <subscriptionId>${azure.appservice.subscription}</subscriptionId>
          <resourceGroup>${azure.appservice.resourcegroup}</resourceGroup>
          <appServicePlanName>${azure.appservice.plan}</appServicePlanName>
          <appName>${azure.appservice.appname}</appName>
          <appSettings>
            <property>
              <name>JAVA_OPTS</name>
              <value>-Dserver.port=80</value>
            </property>
          </appSettings>
          <deployment>
            <resources>
              <resource>
                <directory>${project.basedir}/target</directory>
                <includes>
                  <include>*spring-boot.jar</include>
                </includes>
              </resource>
            </resources>
          </deployment>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>**/*org/opengroup/osdu/workflow/provider/azure/config/AuthenticationConfig.class</exclude>
            <exclude>**/*org/opengroup/osdu/workflow/provider/azure/config/AzureBootstrapConfig.class</exclude>
            <exclude>**/*org/opengroup/osdu/workflow/provider/azure/config/AzureWorkflowEngineConfig.class</exclude>
            <exclude>**/*org/opengroup/osdu/workflow/provider/azure/config/CosmosConfig.class</exclude>
            <exclude>**/*org/opengroup/osdu/workflow/provider/azure/config/RedisConfig.class</exclude>
            <exclude>**/*org/opengroup/osdu/workflow/provider/azure/config/CustomObjectMapperConfig.class</exclude>
            <exclude>**/*org/opengroup/osdu/workflow/provider/azure/config/ActiveDagRunsConfig.class</exclude>
            <exclude>**/*org/opengroup/osdu/workflow/provider/azure/config/AzureWorkflowEngineConfig.class</exclude>
            <exclude>**/*org/opengroup/osdu/workflow/provider/azure/config/MessagePublisherConfig.class</exclude>
            <exclude>**/*org/opengroup/osdu/workflow/provider/azure/config/MessagePublisherConfig.class</exclude>
            <exclude>**/*org/opengroup/osdu/workflow/provider/azure/security/**</exclude>
          </excludes>
        </configuration>
        <version>0.8.3</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
