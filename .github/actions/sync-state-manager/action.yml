name: 'Sync State Manager'
description: 'Manages upstream sync state to prevent duplicate PRs and issues'

inputs:
  github_token:
    description: 'GitHub token for API access'
    required: true
  upstream_repo_url:
    description: 'Upstream repository URL'
    required: true
  default_branch:
    description: 'Default branch name (main/master)'
    required: true

outputs:
  should_create_pr:
    description: "Whether to create a new PR (true/false)"
    value: ${{ steps.decision.outputs.should_create_pr }}
  should_create_issue:
    description: "Whether to create a new issue (true/false)"
    value: ${{ steps.decision.outputs.should_create_issue }}
  should_update_branch:
    description: "Whether to update existing branch (true/false)"
    value: ${{ steps.decision.outputs.should_update_branch }}
  existing_pr_number:
    description: "Existing PR number if found"
    value: ${{ steps.decision.outputs.existing_pr_number }}
  existing_issue_number:
    description: "Existing issue number if found"
    value: ${{ steps.decision.outputs.existing_issue_number }}
  existing_branch_name:
    description: "Existing sync branch name if found"
    value: ${{ steps.decision.outputs.existing_branch_name }}
  sync_decision:
    description: "Decision reason for logging"
    value: ${{ steps.decision.outputs.sync_decision }}

runs:
  using: "composite"
  steps:
    - name: "Get current upstream SHA"
      id: upstream_sha
      shell: bash
      run: ${{ github.action_path }}/get-upstream-sha.sh "${{ inputs.default_branch }}"

    - name: "Detect existing sync issues"
      id: existing_issues
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: ${{ github.action_path }}/detect-existing-issues.sh

    - name: "Check stored sync state"
      id: stored_state
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: ${{ github.action_path }}/check-stored-state.sh "${{ steps.existing_issues.outputs.existing_issue_number }}"

    - name: "Detect existing sync PRs"
      id: existing_prs
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: ${{ github.action_path }}/detect-existing-prs.sh

    - name: "Clean up abandoned sync branches"
      id: cleanup
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: ${{ github.action_path }}/cleanup-abandoned-branches.sh

    - name: "Make sync decision"
      id: decision
      shell: bash
      run: |
        ${{ github.action_path }}/make-sync-decision.sh \
          "${{ steps.upstream_sha.outputs.upstream_sha }}" \
          "${{ steps.stored_state.outputs.last_upstream_sha }}" \
          "${{ steps.existing_prs.outputs.has_existing_pr }}" \
          "${{ steps.existing_issues.outputs.has_existing_issue }}" \
          "${{ steps.existing_prs.outputs.existing_pr_number }}" \
          "${{ steps.existing_issues.outputs.existing_issue_number }}" \
          "${{ steps.existing_prs.outputs.existing_pr_branch }}"