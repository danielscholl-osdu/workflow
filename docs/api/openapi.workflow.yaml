openapi: 3.0.1
info:
  title: Workflow Service API
  description: |-
    Workflow Service API is a wrapper API on existing orchestrator services (ariflow) defined in way which suits the domain workflow needs.Operational tasks like starting,stopping, pausing etc will be part of this API. Also creation and maintenance will be responsilbilities of this API.
     ## Key Points:
     **Workflow** - Workflow is a collection of steps taken in some order to perform some meaning full tasks. For example, CSV workflow will perform the steps needed to successfully ingest a CSV file into data platform. Each workflow is repsented by a unique workflow id. (`id`).    <br> Workflows are represented as Directed Acyclic Graphs. In case of Airflow implementation of Workflow, each workflow will corresepond to an Airflow DAG.
    
     **Workflow Run** - Workflow Run is single execution of a workflow. For example, a CSV workflow executed to ingest a CSV is CSV workflow run.
     In case of Airflow as orchestrator, a workflow run will be equivalent to one dag run.
    
    Each instance of workflow run is represented by unique run id. (`runId`).
  contact:
    name: OSDU Data Platform Team
    email: dps@OSDU.org
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 2.0.5
servers:
  - url: /api/workflow
security:
  - Authorization: []
tags:
  - name: workflow-manager-api
    description: WorkflowManager related endpoints
  - name: workflow-run-api
    description: WorkflowRun related endpoints
  - name: health
    description: Health related endpoints
  - name: workflow-system-manager-api
    description: Workflow System Manager related endpoints
  - name: info
    description: Version info endpoint
paths:
  /v1/workflow/{workflow_name}/workflowRun/{runId}:
    get:
      tags:
        - workflow-run-api
      summary: Get details for a speciffic workflow run instance.
      description: Get an execution instances for a workflow. **Required roles** - 'service.workflow.viewer'.
      operationId: getWorkflowRunById
      parameters:
        - name: workflow_name
          in: path
          required: true
          schema:
            type: string
        - name: runId
          in: path
          required: true
          schema:
            type: string
        - name: data-partition-id
          in: header
          description: Tenant Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Workflow execution detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowRunResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '403':
          description: User not authorized to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '409':
          description: A Workflow with the given name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
      security:
        - Authorization: []
    put:
      tags:
        - workflow-run-api
      summary: Update the workflow run instance.
      description: Update workflow run. **Required roles** - 'service.workflow.viewer'.
      operationId: updateWorkflowRun
      parameters:
        - name: workflow_name
          in: path
          required: true
          schema:
            type: string
        - name: runId
          in: path
          required: true
          schema:
            type: string
        - name: data-partition-id
          in: header
          description: Tenant Id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkflowRunRequest'
        required: true
      responses:
        '200':
          description: Workflow updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowRunResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '403':
          description: User not authorized to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '409':
          description: A Workflow with the given name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
      security:
        - Authorization: []
  /v1/workflow:
    get:
      tags:
        - workflow-manager-api
      summary: List all the workflow applicable for a tenant.
      description: List all the workflows for the tenant. **Required roles** - 'service.workflow.viewer'.
      operationId: getAllWorkflowsForTenant
      parameters:
        - name: prefix
          in: query
          required: false
          schema:
            type: string
        - name: data-partition-id
          in: header
          description: Tenant Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of all the workflows
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkflowMetadata'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '403':
          description: User not authorized to perform the action.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '409':
          description: A Workflow with the given name already exists.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '502':
          description: Bad Gateway
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
      security:
        - Authorization: []
    post:
      tags:
        - workflow-manager-api
      summary: Creates workflow definition with standard orchestrator operators.
      description: API to create a new workflow using standard operators of orchestrator. **Required roles** - 'service.workflow.admin'.
      operationId: create
      parameters:
        - name: data-partition-id
          in: header
          description: Tenant Id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkflowRequest'
        required: true
      responses:
        '200':
          description: Workflow created | updated successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkflowMetadata'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '403':
          description: User not authorized to perform the action.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '409':
          description: A Workflow with the given name already exists.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '502':
          description: Bad Gateway
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
      security:
        - Authorization: []
  /v1/workflow/{workflow_name}/workflowRun:
    get:
      tags:
        - workflow-run-api
      summary: Get all run instances of a workflow.
      description: Get all run instances for a worflow. **Required roles** - 'service.workflow.viewer'.
      operationId: getAllRunInstances
      parameters:
        - name: workflow_name
          in: path
          required: true
          schema:
            type: string
        - name: params
          in: query
          required: true
          schema:
            type: object
            additionalProperties:
              type: object
        - name: data-partition-id
          in: header
          description: Tenant Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: History of workflow runs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowRun'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '403':
          description: User not authorized to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '409':
          description: A Workflow with the given name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
      security:
        - Authorization: []
    post:
      tags:
        - workflow-run-api
      summary: Trigger a workflow.
      description: Trigger a workflow mentioned in payload. **Required roles** - 'service.workflow.creator'.
      operationId: triggerWorkflow
      parameters:
        - name: workflow_name
          in: path
          required: true
          schema:
            type: string
        - name: data-partition-id
          in: header
          description: Tenant Id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerWorkflowRequest'
        required: true
      responses:
        '200':
          description: Workflow successully triggered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowRunResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '403':
          description: User not authorized to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '409':
          description: A Workflow with the given name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
      security:
        - Authorization: []
  /v1/workflow/system:
    post:
      tags:
        - workflow-system-manager-api
      summary: Creates workflow definition with standard orchestrator operators.
      description: API to create a new workflow using standard operators of orchestrator. **Required roles** - 'service.workflow.admin'.
      operationId: createSystemWorkflow
      parameters:
        - name: data-partition-id
          in: header
          description: Tenant Id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkflowRequest'
        required: true
      responses:
        '200':
          description: Workflow created | updated successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkflowMetadata'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '403':
          description: User not authorized to perform the action.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '409':
          description: A Workflow with the given name already exists.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '502':
          description: Bad Gateway
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
      security:
        - Authorization: []
  /v1/workflow/{workflow_name}:
    get:
      tags:
        - workflow-manager-api
      summary: Get complete details for a workflow.
      description: Get complete details for an workflow. **Required roles** - 'service.workflow.viewer'.
      operationId: getWorkflowByName
      parameters:
        - name: workflow_name
          in: path
          required: true
          schema:
            type: string
        - name: data-partition-id
          in: header
          description: Tenant Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Workflow Details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkflowMetadata'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '403':
          description: User not authorized to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '409':
          description: A Workflow with the given name already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
      security:
        - Authorization: []
    delete:
      tags:
        - workflow-manager-api
      summary: Delete a workflow defintion.
      description: Delete a workflow by it's name. **Required roles** - 'service.workflow.admin'.
      operationId: deleteWorkflowById
      parameters:
        - name: workflow_name
          in: path
          required: true
          schema:
            type: string
        - name: data-partition-id
          in: header
          description: Tenant Id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Workflow deleted successfully.
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '403':
          description: User not authorized to perform the action.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '409':
          description: A Workflow with the given name already exists.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '502':
          description: Bad Gateway
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
      security:
        - Authorization: []
  /v1/workflow/{workflow_name}/workflowRun/{runId}/latestInfo:
    get:
      tags:
        - run-details-api
      summary: Get execution details for the latest workflow task.
      description: Get execution details for the latest workflow task. **Required roles** - 'service.workflow.viewer' and ownership of requested workflow run.
      operationId: getWorkflowRunDetails
      parameters:
        - name: workflow_name
          in: path
          required: true
          schema:
            type: string
        - name: runId
          in: path
          required: true
          schema:
            type: string
        - name: data-partition-id
          in: header
          description: Tenant Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Workflow execution details of the latest task.
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '403':
          description: User not authorized to perform the action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppError'
      security:
        - Authorization: []
  /v1/info:
    get:
      tags:
        - info
      summary: Version info
      description: For deployment available public `/info` endpoint, which provides build and git related information.
      operationId: info
      parameters:
        - name: data-partition-id
          in: header
          description: Tenant Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Version info.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionInfo'
  /readiness_check:
    get:
      tags:
        - health
      summary: Readiness Check endpoint
      description: For deployment available public `/readiness_check` endpoint, which provides `Workflow service is ready` message.
      operationId: readinessCheck
      parameters:
        - name: data-partition-id
          in: header
          description: Tenant Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Workflow service is ready
          content:
            '*/*':
              schema:
                type: string
  /liveness_check:
    get:
      tags:
        - health
      summary: Liveness Check endpoint
      description: For deployment available public `/liveness_check` endpoint, which provides `Workflow service is alive` message.
      operationId: livenessCheck
      parameters:
        - name: data-partition-id
          in: header
          description: Tenant Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Workflow service is alive
          content:
            '*/*':
              schema:
                type: string
  /v1/workflow/system/{workflow_name}:
    delete:
      tags:
        - workflow-system-manager-api
      summary: Delete a workflow defintion.
      description: Delete a workflow by it's name. **Required roles** - 'service.workflow.admin'.
      operationId: deleteSystemWorkflowById
      parameters:
        - name: workflow_name
          in: path
          required: true
          schema:
            type: string
        - name: data-partition-id
          in: header
          description: Tenant Id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Workflow deleted successfully.
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '403':
          description: User not authorized to perform the action.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '409':
          description: A Workflow with the given name already exists.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '502':
          description: Bad Gateway
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
        '503':
          description: Service Unavailable
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppError'
      security:
        - Authorization: []
components:
  schemas:
    UpdateWorkflowRunRequest:
      type: object
      properties:
        status:
          type: string
          enum:
            - submitted
            - running
            - finished
            - failed
            - success
            - queued
    AppError:
      type: object
      properties:
        code:
          type: integer
          format: int32
        reason:
          type: string
        message:
          type: string
    WorkflowRunResponse:
      type: object
      properties:
        workflowId:
          type: string
          description: Workflow id for the workflow
        runId:
          type: string
          description: Run id for the workflow
        startTimeStamp:
          type: integer
          description: Start timestamp of the workflow run.Epoch time stamp
          format: int64
        endTimeStamp:
          type: integer
          description: End timestamp of the workflow run.Epoch timestamp
          format: int64
        status:
          type: string
          description: Task execution status
          enum:
            - INPROGRESS
            - PARTIAL_SUCCESS
            - SUCCESS
            - FAILED
            - SUBMITTED
        submittedBy:
          type: string
          description: System captured user details which triggered the run
    CreateWorkflowRequest:
      type: object
      properties:
        workflowName:
          type: string
          description: Workfow name given as input from user while deploying the workflow
        description:
          type: string
          description: Description of workflow provided by user at time of creation of workflow
        registrationInstructions:
          type: object
          additionalProperties:
            type: object
            description: |-
              Workfow registration instructions which could contains:

              Name of already registered Airflow DAG
              Content of python DAG file
              etc By default this is Airflow DAG named workflowName
          description: |-
            Workfow registration instructions which could contains:

            Name of already registered Airflow DAG
            Content of python DAG file
            etc By default this is Airflow DAG named workflowName
    WorkflowMetadata:
      type: object
      properties:
        workflowId:
          type: string
          description: System generated id, which uniquely recongnizes a workflow.
        workflowName:
          type: string
          description: Workfow name given as input from user while deploying the workflow.
        description:
          type: string
          description: Description of workflow provided by user at time of creation of workflow.
        createdBy:
          type: string
          description: System captured user info who created workflow.
        creationTimestamp:
          type: integer
          description: System date of creation of workflow.Epoch tiemstamp.
          format: int64
        version:
          type: integer
          description: Sematic versions of workflow. These numbers are assigned in increasing order and correspond to edits\modifications to workflow definitions.
          format: int32
        isDeployedThroughWorkflowService:
          type: boolean
          writeOnly: true
        registrationInstructions:
          type: object
          additionalProperties:
            type: object
            description: |-
              Workfow registration instructions which could contains:

              Name of already registered Airflow DAG
              Cotent of python DAG file
              etc By default this is Airflow DAG named workflowName
          description: |-
            Workfow registration instructions which could contains:

            Name of already registered Airflow DAG
            Cotent of python DAG file
            etc By default this is Airflow DAG named workflowName
        isSystemWorkflow:
          type: boolean
          writeOnly: true
    TriggerWorkflowRequest:
      type: object
      properties:
        runId:
          type: string
          description: Optional. Explicit setting up workflow run id.
        executionContext:
          type: object
          additionalProperties:
            type: object
            description: Map to configure workflow speciffic key value pairs
          description: Map to configure workflow speciffic key value pairs
    WorkflowRun:
      type: object
      properties:
        workflowId:
          type: string
          description: Workflow id for the workflow
        workflowName:
          type: string
          description: Workflow id for the workflow
        runId:
          type: string
          description: Run id for the workflow
        startTimeStamp:
          type: integer
          description: Start timestamp of the workflow run.Epoch time stamp
          format: int64
        endTimeStamp:
          type: integer
          description: End timestamp of the workflow run.Epoch timestamp
          format: int64
        status:
          type: string
          description: Task execution status
          enum:
            - submitted
            - running
            - finished
            - failed
            - success
            - queued
        submittedBy:
          type: string
          description: System captured user details which triggered the run.
        workflowEngineExecutionDate:
          type: string
      description: Reperesent one workflow run.
    ConnectedOuterService:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
    VersionInfo:
      type: object
      properties:
        groupId:
          type: string
        artifactId:
          type: string
        version:
          type: string
        buildTime:
          type: string
        branch:
          type: string
        commitId:
          type: string
        commitMessage:
          type: string
        connectedOuterServices:
          type: array
          items:
            $ref: '#/components/schemas/ConnectedOuterService'
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
      bearerFormat: Authorization