openapi: 3.0.0
info:
  description: |
    Workflow Service API is a wrapper API on existing orchestrator services (ariflow) defined in way which suits the domain workflow needs.Operational tasks like starting,stopping, pausing etc will be part of this API. Also creation and maintenance will be responsilbilities of this API.

    ## Key Points:

    **Workflow** - Workflow is a collection of steps taken in some order to perform some meaning full tasks. For example, CSV workflow will perform the steps needed to successfully ingest a CSV file into data platform. Each workflow is repsented by a unique workflow id. (`id`).    <br> Workflows are represented as Directed Acyclic Graphs. In case of Airflow implementation of Workflow, each workflow will corresepond to an Airflow DAG.

    **Workflow Run** - Workflow Run is single execution of a workflow. For example, a CSV workflow executed to ingest a CSV is CSV workflow run.
    In case of Airflow as orchestrator, a workflow run will be equivalent to one dag run.

    Each instance of workflow run is represented by unique run id. (`runId`).
  version: 2.0.5
  title: Workflow Service API
  contact:
    email: SupportGO3-NRG@epam.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
security:
  - bearer: []
servers:
  - url: 'https://os-workflow-attcrcktoa-uc.a.run.app'
paths:
  /v1/workflow :
    post:
      tags:
        - Workflow
      summary: Creates workflow definition with standard orchestrator operators.
      operationId: deployWorkflow
      description: API to create a new workflow using standard operators of orchestrator.
      responses:
        '200':
          description: Workflow created\updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: Invalid/Expired Credential
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow'
        description: Request payload for deploying new workflow.
    get:
      tags:
        - Workflow
      summary: List all the workflow applicable for a tenant.
      operationId: listAllWorkflow
      description: List all the workflows for the tenant.
      parameters:
        - name: prefix
          in: query
          description: 'Filter workflow names which start with  the full prefix specified.'
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/workflow'
                type: array
          description: List of all the workflows.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: Invalid/Expired Credential
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /v1/workflow/{workflow_name}:
    delete:
      tags:
        - Workflow
      summary: Delete a workflow defintion.
      operationId: deleteWorkflow
      description: Delete a workflow by it's name.
      parameters:
        - name: workflow_name
          in: path
          description: Unique Name of the Workflow to be deleted.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Workflow deleted successfully.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: Invalid/Expired Credential
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    get:
      tags:
        - Workflow
      summary: Get complete details for a workflow.
      operationId: viewWorkflow
      description: Get complete details for an workflow.
      parameters:
        - name: workflow_name
          in: path
          description: Name of the Workflow.
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Workflow Details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: Invalid/Expired Credential
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/workflow/{workflow_name}/workflowRun:
    post:
      tags:
        - Workflow Run
      summary: Trigger a workflow.
      operationId: triggerWorkflow
      description: Trigger a workflow mentioned in payload.
      parameters:
        - name: workflow_name
          in: path
          description: Unique Name of the Workflow to run.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflowTriggerRequest'
      responses:
        '200':
          description: Workflow successully triggered.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflowRun'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: Invalid/Expired Credential
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    get:
      tags:
        - Workflow Run
      summary: Get all run instances of a workflow.
      operationId: getAllWorkflowRuns
      description: Get all run instances for a worflow.
      parameters:
        - name: workflow_name
          in: path
          description: Unique Name of the Workflow for which the execution details has to be fetched.
          required: true
          schema:
            type: string
        - name: prefix
          in: query
          description: 'A prefix used when generating the runId of the workflow run. Prefix cannot contain the word "backfill"'
          required: false
          schema:
            type: string
        - name: startDate
          in: query
          description: 'The start date where this call should start creating workflow runs from (inclusive)'
          required: false
          schema:
            type: string
        - name: endDate
          in: query
          description: 'The end date where this call should stop creating workflow runs at (inclusive)'
          required: false
          schema:
            type: boolean
        - name: limit
          in: query
          description: 'The maximum number of workflow runs to create in a single request. Maximum is 500.'
          required: false
          schema:
            type: integer
        - name: cursor
          in: query
          description: 'Cursor for subsequent request.'
          required: false
          schema:
            type: string
        - name: partial
          in: query
          description: 'Whether or not a partial batch can be created. If true, and the number of workflow runs that would be created between the start and end exceeds the limit, no workflow runs will be created.'
          required: false
          schema:
            type: boolean
        - name: conf
          in: query
          description: 'JSON configuration added to the Workflow run conf attribute'
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/workflowRun'
                type: array
          description: History of workflow runs.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: Invalid/Expired Credential
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

  /v1/workflow/{workflow_name}/workflowRun/{runId}:
    get:
      tags:
        - Workflow Run
      summary: Get details for a speciffic workflow run instance.
      operationId: getWorkflowRun
      description: Get an execution instances for a workflow.
      parameters:
        - name: workflow_name
          in: path
          description: Unique Name of Workflow.
          required: true
          schema:
            type: string
        - name: runId
          in: path
          description: Run id for the worfkow.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Workflow execution detail.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflowRun'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: Invalid/Expired Credential
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    put:
      tags:
        - Workflow Run
      summary: Update the workflow run instance.
      operationId: updateWorkflowRun
      description: Update workflow run.
      parameters:
        - name: workflow_name
          in: path
          description: Unique Name of Workflow.
          required: true
          schema:
            type: string
        - name: runId
          in: path
          description: Run id for the worfkow.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflowRun'
      responses:
        '200':
          description: Workflow updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflow'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: Invalid/Expired Credential
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /v1/info:
    get:
      tags:
        - info
      summary: "Version info"
      description: "For deployment available public `/v1/info` endpoint, \
              \ which provides build and git related information."
      operationId: "Version info"
      responses:
        "200":
          description: "Version info."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VersionInfo"


components:
  securitySchemes:
    bearer:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    workflowTriggerRequest:
      title: Workflow Trigger Request
      type: object
      properties:
        runId:
          type: string
          description: Optional. Explicit setting up workflow run id.
        executionContext:
          type: object
          properties:
            key1:
              type: string
              example: value1

          description: Map to configure workflow speciffic key value pairs.
    workflow:
      type: object
      title: Workflow
      properties:
        workflowId:
          readOnly: true
          description: System generated id, which uniquely recongnizes a workflow.
          type: string
        workflowName:
          description: Workfow name given as input from user while deploying the workflow.
          type: string
        registrationInstructions:
          writeOnly: true
          description: |
            Workfow registration instructions which could contains:
            - Name of already registered Airflow DAG
            - Cotent of python DAG file
            - etc
            By default this is Airflow DAG named `workflowName`
          type: object
          properties:
            dagName:
              type: string
              example: osdu-default
            dagContent:
              type: string
              example:
            etc:
              type: string
        description:
          type: string
          description: Description of workflow provided by user at time of creation of workflow.
        createdby:
          readOnly: true
          type: string
          description: System captured user info who created workflow.
        creationTimestamp:
          readOnly: true
          type: number
          description: System date of creation of workflow.Epoch tiemstamp.
        version:
          readOnly: true
          type: string
          description: Sematic versions of workflow. These numbers are assigned in increasing order and correspond to edits\modifications to workflow definitions.

    workflowRun:
      title: Workflow Run
      description: Reperesent one workflow run.
      type: object
      properties:
        workflowId:
          readOnly: true
          type: string
          description: Workflow id for the workflow.
        runId:
          readOnly: true
          type: string
          description: Run id for the workflow.
        startTimestamp:
          readOnly: true
          type: number
          description: Start timestamp of the workflow run.Epoch time stamp.
        endTimestamp:
          readOnly: true
          type: number
          description: End timestamp of the workflow run.Epoch timestamp.
        status:
          description: "Task execution status"
          enum:
            - "INPROGRESS"
            - "PARTIAL_SUCCESS"
            - "SUCCESS"
            - "FAILED"
            - "SUBMITTED"
          title: "status"
          type: "string"
        submittedBy:
          readOnly: true
          type: string
          description: System captured user details which triggered the  run.

    error:
      title: Error
      type: object
      properties:
        code:
          type: integer
          format: int32
        errors:
          type: array
          items:
            $ref: '#/components/schemas/errorDetails'
        message:
          type: string
    errorDetails:
      title: Error Details
      type: object
      properties:
        message:
          type: string
        reason:
          type: string

    VersionInfo:
      type: "object"
      properties:
        groupId:
          type: "string"
          description: "Maven artifact group ID."
        actifactId:
          type: "string"
          description: "Maven artifact ID."
        version:
          type: "string"
          description: "Maven artifact version"
        buildTime:
          type: "string"
          description: "Maven artifact build time"
        branch:
          type: "string"
          description: "Current git branch"
        commitId:
          type: "string"
          description: "Latest commit hash"
        commitMessage:
          type: "string"
          description: "Latest commit message"
        connectedOuterServices:
          type: "array"
          description: "Connected outer services information"
          items:
            $ref: "#/components/schemas/ConnectedOuterService"
      description: "Version info."
    ConnectedOuterService:
      type: "object"
      properties:
        name:
          type: "string"
          description: "Connected outer service name."
        version:
          type: "string"
          description: "Connected outer service version."
      description: "Connected outer service information."
